#!/bin/sh
# from https://github.com/searx/searx/blob/master/manage.sh

BASE_DIR="$(dirname -- "`readlink -f -- "$0"`")"

cd -- "$BASE_DIR"
set -e

# TODO : check the current geckodriver version
set -e
geckodriver -V > /dev/null 2>&1 || NOTFOUND=1
set +e
if [ -z "$NOTFOUND" ]; then
    return
fi
GECKODRIVER_VERSION="v0.32.0"
PLATFORM="`python3 -c "import platform; print(platform.system().lower(), str(platform.machine()).lower())"`"
# Possible values for platform().machine
# Linux & Mac: 
# * https://en.wikipedia.org/wiki/Uname
# * https://stackoverflow.com/questions/45125516/possible-values-for-uname-m 
# Windows :
# * https://github.com/python/cpython/blob/468c3bf79890ef614764b4e7543608876c792794/Lib/platform.py#L763
case "$PLATFORM" in
    "linux aarch64") ARCH="linux-aarch64";;
    "linux i386" | "linux2 i386") ARCH="linux32";;
    "linux i686" | "linux2 i686") ARCH="linux32";;
    "linux x86_64" | "linux2 x86_64") ARCH="linux64";;
    "windows arm64") ARCH="win-aarch64";;
    "windows x86") ARCH="win32";;
    "windows amd64") ARCH="win64";;
    "mac arm64") ARCH="macos-aarch64";;
    "mac x86_64") ARCH="macos";;
    *)  echo "Unsupported platform '$PLATFORM'";
        exit 1;;
esac
GECKODRIVER_URL="https://github.com/mozilla/geckodriver/releases/download/$GECKODRIVER_VERSION/geckodriver-$GECKODRIVER_VERSION-$ARCH.tar.gz";

if [ -z "$1" ]; then
    if [ -z "$VIRTUAL_ENV" ]; then
        printf "geckodriver can't be installed because VIRTUAL_ENV is not set, you should download it from\n  %s" "$GECKODRIVER_URL\n"
        exit
    else
        GECKODRIVER_DIR="$VIRTUAL_ENV/bin"
    fi
else
    GECKODRIVER_DIR="$1"
    mkdir -p -- "$GECKODRIVER_DIR"
fi

printf "Installing %s/geckodriver from\n  %s\n" "$GECKODRIVER_DIR" "$GECKODRIVER_URL"

FILE="`mktemp`"
wget -qO "$FILE" -- "$GECKODRIVER_URL" && tar xz -C "$GECKODRIVER_DIR" -f "$FILE" geckodriver
rm -- "$FILE"
chown $(id -u):$(id -g) -- "$GECKODRIVER_DIR/geckodriver"
chmod 755 -- "$GECKODRIVER_DIR/geckodriver"
